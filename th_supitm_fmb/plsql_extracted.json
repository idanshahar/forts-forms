{
  "triggers": [
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "DECLARE\n  l_sup_produc VARCHAR2(1);\nBEGIN\n\n  IF :a1.supp_no IS NOT NULL THEN\n    l_get_supp_info(:a1.supp_no, :d_name, :a1.s_status, 'e');\n    \n    --Paz 05/19 - Show Producer title next to the supp_no \n    BEGIN\n      SELECT s_producer INTO l_sup_produc FROM suppliers WHERE supplier_no = :a1.supp_no;\n      IF l_sup_produc = 'Y' THEN\n        set_item_property('SUP_PRODC_TITLE', visible, property_true);\n      ELSE\n        set_item_property('SUP_PRODC_TITLE', visible, property_false);\n      END IF;\n    \n    EXCEPTION\n      WHEN no_data_found THEN\n        set_item_property('SUP_PRODC_TITLE', visible, property_false);\n    END;\n  \n  ELSE\n    :d_name := NULL;\n    set_item_property('PUSH_BONUS', visible, property_false);\n  END IF;\nEND;\n\n\n\n\n"
    },
    {
      "name": "KEY-LISTVAL",
      "code": ":a1.supp_no  :=  NULL;\nNEXT_ITEM;\n"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "check_mandatory('n','n');\ndo_key('execute_query');"
    },
    {
      "name": "KEY-PREV-ITEM",
      "code": "if :supp_no is null then\n  :d_name  :=  NULL;\nend if;\nPREVIOUS_ITEM;\ncheck_package_failure;\nPREVIOUS_ITEM;\n"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "declare dummy varchar(80);\nbegin\n pop_help('SUPPLIERS',  :a1.supp_no, :dummy_C,  :d_name,  dummy, dummy);\nend;\nif :supp_no is not null then\n\tprevious_item;\n\t--do_key('execute_query');\nend if;\n"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "do_key('next_item');"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "begin \nIF LO_USER_INTERFACE.UI != LO_USER_INTERFACE.WEB THEN\n  :a1.file_name := win_api_dialog.open_file('Select File ','$DAT$');\nELSE\n\t:a1.file_name := WEBUTIL_FILE.FILE_OPEN_DIALOG('Select File ','$DAT$');\nEND IF;\n  if :a1.file_name is null then\n    null;\n  else\n  \tgo_item('A1.BUT_CHECK_FILE');\n  end if;\nend;"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "--check_mandatory('N','N');\n--next_item;\ngo_item('A1.BUT_CHECK_FILE');\n"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "IF :supp_items.item_no IS NOT NULL THEN\n  errors2(10735,'e','����� ���� ������ �� ���� ���');\n/*ELSE\n  set_item_property('A1.FILE_NAME',ENABLED,PROPERTY_FALSE);\n  set_item_property('A1.FILE_NAME_LOV',ENABLED,PROPERTY_FALSE);*/\nEND IF;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "declare   l_rec     varchar2(7);\nbegin\n\tl_rec := :system.trigger_record;\n  do_key('commit_form');\n  go_record(l_rec);\n  :parameter.param_rec_no := l_rec;\n  call_screen_new('TH_SUPPRI_N', 'PARAM_SUPP_NO', to_char(:a1.supp_no),'PARAM_ITEM_FROM',:supp_items.item_no,'PARAM_SI_NO',:supp_items.si_no);\n  show_view('PAGE_2A');\nend;  "
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "if get_view_property('PAGE_3',visible) = 'FALSE' then\n  go_item('SI_BONUS_INFO');\n  show_view('PAGE_3');\n  set_item_property('PUSH_BONUS',label,'����');\n  set_item_property('PUSH_GENERAL',visible,property_false);\nelse\n\tgo_item('SUPP_ITEMS.ITEM_NO');\n\tshow_view('PAGE_2');\n\tshow_view('PAGE_2A');\n\thide_view('PAGE_3');\n\tgo_item('SUPP_ITEMS.ITEM_NO'); -- yair 12.12.16\n\t--go_item('SUPP_ITEMS.ITEM_NO');\n  set_item_property('PUSH_BONUS',label,'���� �������');\n  set_item_property('PUSH_GENERAL',visible,property_true);\n  set_item_property('PUSH_GENERAL',enabled,property_true);\nend if;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "if get_view_property('PAGE_4',visible) = 'FALSE' then\n  go_item('SI_GEN_INFO');\n  show_view('PAGE_4');\n  set_item_property('PUSH_GENERAL',label,'����');\n  set_item_property('PUSH_BONUS',visible,property_false);\nelse\n\tgo_item('SUPP_ITEMS.ITEM_NO');\n\tshow_view('PAGE_2');\n\tshow_view('PAGE_2A');\n\thide_view('PAGE_4');\n\tgo_item('SUPP_ITEMS.ITEM_NO'); -- yair 12.12.16\n\t--go_item('SUPP_ITEMS.ITEM_NO');\n  set_item_property('PUSH_GENERAL',label,'���� ����');\n  set_item_property('PUSH_BONUS',visible,property_true);\n  set_item_property('PUSH_BONUS',enabled,property_true);\nend if;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "--DO_KEY('COMMIT');\n:parameter.param_rec_no := :system.trigger_record;\nvalidate(form_scope);\nlo_check_double;\ncommit_form;\ngo_block('supp_items');\ngo_record(:parameter.param_rec_no);\n:parameter.param_rec_no := null;\nif :A1.SUPP_NO is not null and :SUPP_ITEMS.ITEM_NO is not null then\n\tscan_execute(45,'S',:A1.SUPP_NO,:SUPP_ITEMS.ITEM_NO ,null,null,null,null);\nelse\n\terrors(1,'e');\nend if;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "go_block('SUPP_PRODS');\nshow_view('OTHER_SUP');\nexecute_query;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "call_screen_new('AST_INTERFAC_WMS', 'PARAM_ITEM_NO',:supp_items.item_no);"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "-- 24.01.2022 Galya\n\t  declare   \n\t  \tl_count    number(6);\n\t  begin\t\n\t    select count(*) into l_count from hashlama_temp2 where tmp_pid = :a1.tmp_pid;\n\t    if nvl(l_count,0) = 0 then\n       -- alert_message (3,'��� ������ ����� ������');\n        errors2(10735,'e','��� ������ ����� ������');\n\t    end if;\t\n    EXCEPTION\n      WHEN NO_DATA_FOUND THEN\n      NULL;\n\t  end; \n-- 24.01.2022 Galya\n\nhide_view('PAGE_2A');\ngo_block('hashlama_temp2');\nclear_block(no_validate);\nexecute_query;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "IF :supp_items.item_no IS NULL THEN\n\terrors(1,'e');\nELSE\n\tshow_view('PAGE_5');\n\tgo_block('ITEMS');\n\tclear_block(no_validate);\n\texecute_query;\nEND IF;"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": ":parameter.param_rec_no := :system.trigger_record;\nvalidate(form_scope);\ncommit_form;\ngo_block('supp_items');\ngo_record(:parameter.param_rec_no);\n:parameter.param_rec_no := null;\nif :A1.SUPP_NO is not null and :SUPP_ITEMS.ITEM_NO is not null then\n\tscan_execute(45,'S',:A1.SUPP_NO,:SUPP_ITEMS.ITEM_NO ,null,null,null,'144');\nelse\n\terrors(1,'e');\nend if;\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "go_block('SUPP_ITEMS');\nhide_view('OTHER_SUP');"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "go_block('a1');\nshow_view('PAGE_2A');\nhide_view('PAGE_INS_FILE');\nsynchronize;"
    },
    {
      "name": "KEY-EXEQRY",
      "code": "begin\t\n\tcheck_mandatory('supp_no', 'GO');\n\t------------------------------------------ olga 21.07.09\n\tdeclare\n\t\t L_AL_BUT number;\n\t\t mes varchar(200);\n\tbegin\n\t\tif :system.form_status != 'QUERY' then\t\t\n\t\t \tL_AL_BUT := raise_alert(10231,'AL_CAUTION_3A');  \n\t\t  if L_AL_BUT = ALERT_BUTTON2 then\t  \t\t  \n\t\t\t \tcommit_form; \t \t \t\n\t \t\tend if;\n\t\tend if;\n\tend;\n\t---------------------------------------------------------\n\tgo_block('supp_items');\n\tcheck_package_failure;\n\texecute_query;\n\nend;"
    },
    {
      "name": "KEY-LISTVAL",
      "code": ":supp_items.item_no := null;\n:supp_items.item_desc := null;\nNEXT_ITEM;\n\n"
    },
    {
      "name": "KEY-PREV-ITEM",
      "code": "if :supp_items.item_no is null then\n  :supp_items.item_desc  :=  NULL;\nend if;\nPREVIOUS_ITEM;\n"
    },
    {
      "name": "KEY-ENTQRY",
      "code": "declare out_item varchar2(25);\nBegin\nGET_ITEM_REF(:SUPP_ITEMS.item_no, '�', '',  out_item,  \n               :SUPP_ITEMS.item_desc,'ERR' );\nIf out_item is not null then \n   :SUPP_ITEMS.item_no := out_item;\n   do_key('next_field');\nEnd if;\nEnd;"
    },
    {
      "name": "KEY-MENU",
      "code": "Pop_help('X_REF', :dummy_N, :SUPP_ITEMS.item_no, :SUPP_ITEMS.item_desc, '�', '');"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "-- 22.05.2019 Galya\nDECLARE\n  l_query       VARCHAR2(500);\n  l_where       VARCHAR2(300);\n  l_i_name_fld  VARCHAR2(100) := 'i_hname';\n  l_i_name_long VARCHAR2(100) := 'i_hname_long';\n  l_item_desc   VARCHAR2(100) := :item_desc;\nBEGIN\n  l_query := 'SELECT item_no, ' ||\n             'nvl(i_hname_long,i_hname) item_desc, '  ||\n             'i_acq_unit, '                ||\n             'i_main_supp '                ||\n             'FROM items ';\n\n  IF :parameter.param_is_itm_case_sens = 'N' THEN\n    l_i_name_fld  := 'UPPER(' || l_i_name_fld || ')';\n    l_i_name_long := 'UPPER(' || l_i_name_long || ')';\n    l_item_desc   := UPPER(l_item_desc);\n  END IF;\n\n  l_where := l_where || ' i_status NOT IN (''�'',''�'')';\n  l_where := l_where || ' AND ' || nvl(l_i_name_long,l_i_name_fld) || ' LIKE ''%' || l_item_desc || '%''';\n\n  l_query := l_query || ' WHERE ' || l_where || ' ORDER BY item_no';\n  l_query := populate_group_with_query('RG_ITEM', l_query);  \n  list_values;\nEND;\n--list_values;\n-- 22.05.2019 Galya\nif :supp_items.item_no is not null then\n   declare cursor CHK_SUP is\n  \tselect nvl(s_status,'�')\n  \tfrom SUPPLIERS\n    where supplier_no = :i_main_supp;\n  begin\n  \tif :i_main_supp is not null and :supp_items.s_status is null then\n  \t\topen CHK_SUP;\n  \t\tFetch CHK_SUP into :supp_items.s_status;  \t\t\n  \t\tclose CHK_SUP;\n  \t\tif :supp_items.s_status is null or :supp_items.s_status != '�' then\n  \t\t\t:i_main_supp := null;\n  \t\tend if;  \t\t\n  \tend if;\n  end;\n--  if :i_main_supp is not null and :supp_items.s_status = '�' then\n  if :a1.supp_no = :i_main_supp and :a1.s_status = '�' then\n  \tset_item_instance_property('SUPP_ITEMS.ITEM_NO',CURRENT_RECORD,visual_attribute,\n  \t                                                                      'VA_ITEM_MAIN');\n  \tset_item_instance_property('SUPP_ITEMS.ITEM_DESC',CURRENT_RECORD,visual_attribute,\n  \t                                                                      'VA_ITEM_MAIN');  \t                                                                      \n  else\n  \tset_item_instance_property('SUPP_ITEMS.ITEM_NO',CURRENT_RECORD,visual_attribute,\n  \t                                                                   'VA_ITEM_MANDATORY');\n  \tset_item_instance_property('SUPP_ITEMS.ITEM_DESC',CURRENT_RECORD,visual_attribute,\n  \t                                                                      'VA_ITEM');   \t\n  end if;  \n  go_item('supp_items.si_no');\nend if;\n"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "declare dummy varchar2(80);\nbegin\n\tget_code_info('9',:si_unit,dummy,'ERR');\nend;"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "declare dummy varchar2(80);\nbegin\n  pop_help('CODES',:dummy_N, :si_unit, dummy,'9','');\nend;\n"
    },
    {
      "name": "POST-TEXT-ITEM",
      "code": ":change_si_no := 1;\n"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "next_item;\n"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "if :si_date_confirm is not null then\n\tif TRUNC(:si_date_confirm) <= TRUNC(SYSDATE) then\n\t\terrors2(108,'e');\n\tend if;\nend if;"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "if to_number(:si_qut_max) < to_number(:si_qut_min)\n     and :si_qut_min is not null then\n      errors(220, 'e');\nend if;\n"
    },
    {
      "name": "KEY-PREV-ITEM",
      "code": "PREVIOUS_ITEM;\n"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "PROC_POST_ITEM_TXT('C');\nif  :si_text_code is not null then\n begin\n   select text_code\n   into :si_text_code\n   from TEXT_HEAD\n   where text_code = :si_text_code;\n exception\n   when no_data_found then\n        errors(2, 'e');\n end;\nend if;"
    },
    {
      "name": "KEY-EDIT",
      "code": "disp_text_code;\n"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "list_values;\n"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "next_item;\n"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "list_values;"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "/*******************************************\n   Code modified by the Forms Migration Assistant\n   16-���-2025 12:27 PM\n *******************************************/\n\nDEBUG.SUSPEND;\n-- 08.03.2022 Galya\nIF :SUPP_ITEMS.SI_BONUS_CATEGORY IS NOT NULL THEN\nBEGIN\n  SELECT code_desc\n  INTO :SUPP_ITEMS.BONUS_NAME\n  FROM codes\n  WHERE tab_no = 1552\n    AND code = :SUPP_ITEMS.SI_BONUS_CATEGORY;\nEXCEPTION\n  WHEN NO_DATA_FOUND THEN\n  errors2(10735,'e','��� ������� ������ �� ����');\nEND;   \nEND IF;\n-- 08.03.2022 Galya\n"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "list_values;\nnext_item;\n"
    },
    {
      "name": "WHEN-VALIDATE-ITEM",
      "code": "-- 23.03.2022 Galya\nIF :SUPP_ITEMS.SI_BONUS_SUB_CATEGORY IS NOT NULL THEN\nBEGIN\n  SELECT code_desc\n  INTO :SUPP_ITEMS.SUB_BONUS_NAME\n  FROM codes\n  WHERE tab_no = 1553\n    AND code = :SUPP_ITEMS.SI_BONUS_SUB_CATEGORY;\nEXCEPTION\n  WHEN NO_DATA_FOUND THEN\n  errors2(10735,'e','��� �� ������� ������ �� ����');\nEND;   \nEND IF;\n-- 23.03.2022 Galya\n"
    },
    {
      "name": "KEY-LISTVAL",
      "code": "list_values;\nnext_item;\n"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "do_key('down');"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "go_item('SUPP_ITEMS.ITEM_NO');\nhide_view('PAGE_3');\nset_item_property('PUSH_BONUS',label,'���� �������');"
    },
    {
      "name": "KEY-NEXT-ITEM",
      "code": "go_item('SUPP_ITEMS.ITEM_NO');\nhide_view('PAGE_4');\nset_item_property('PUSH_GENERAL',label,'���� ����');"
    },
    {
      "name": "WHEN-NEW-BLOCK-INSTANCE",
      "code": "if :a1.supp_no is null then\n     go_block('A1');\nend if;\n--show_view ('page_2a');\n\n"
    },
    {
      "name": "PRE-INSERT",
      "code": "check_permission('INSERT');\ncheck_mandatory('supp_items.item_no', 'N');\n:supp_items.date_update  :=  :today;\n:supp_items.username  :=  :ctrl.username;\n-- Michal 15/08/2023 -- trim si_no\n:supp_items.si_no  :=  ltrim(rtrim(:supp_items.si_no,' '),' ');\n"
    },
    {
      "name": "POST-INSERT",
      "code": "/*update ITEMS\n     set i_main_supp= :supp_items.supplier_no\n     where item_no = :supp_items.item_no\n     and i_main_supp is null;*/   --     closed after  adding field SI_NO    12/04/2010  Rimma\n/* if :si_no is not null then\n  Begin\n  Insert into X_REF\n  (item_no,  x_type,  x_connect_no,  x_item_no,  date_insert,  date_update\n  , username)\n  VALUES\n  (:supp_items.item_no,  '�',  :a1.supp_no,  :si_no,  sysdate,  sysdate, \n   :ctrl.username);\n  Exception when others then null;\n  end;\nend if;\n*/\nnull;"
    },
    {
      "name": "PRE-DELETE",
      "code": "/*\n\tDELETE X_REF\n\tWhere item_no = :supp_items.item_no\n\tand x_type = '�' and x_connect_no =:a1.supp_no;\n*/-- olga 21.07.09\n-- update the main supplier in the item table.\n-- REMOVED By Michal Porian 01/2014\n-- This code will run in POST-DELETE\nnull;\n/*begin\n update items\n    set i_main_supp =\n        (select  max(s.supplier_no)\n           from supp_items s\n          where s.item_no      = :supp_items.item_no\n            and s.supplier_no != :a1.supp_no\n            and s.date_update =\n                (select max(s1.date_update)\n                   from supp_items s1\n                  where s1.item_no      = s.item_no\n                    and s1.supplier_no != :a1.supp_no))\n where item_no     = :supp_items.item_no\n   and i_main_supp = :a1.supp_no;\nexception when no_data_found then null;\nend;\n-- Update the main supplier to null when the last supplier is\n-- beind deleted.\nbegin\n update items\n    set i_main_supp = ''\n  where item_no = :supp_items.item_no\n    and not exists (select '�'\n                      from supp_items\n                     where item_no      = :supp_items.item_no\n                       and supplier_no != :a1.supp_no);\nexception when no_data_found then null;\nend;\n*/"
    },
    {
      "name": "KEY-CLRREC",
      "code": "clear_record;\n"
    },
    {
      "name": "KEY-CREREC",
      "code": "create_record;"
    },
    {
      "name": "KEY-NXTREC",
      "code": "next_record;\n"
    },
    {
      "name": "KEY-PRVREC",
      "code": "previous_record;\n"
    },
    {
      "name": "KEY-SCRDOWN",
      "code": "scroll_down;\n"
    },
    {
      "name": "KEY-SCRUP",
      "code": "scroll_up;\n"
    },
    {
      "name": "POST-DELETE",
      "code": "-- Michal Porian 01/2014 -- Copied from pre-delete\nbegin\nupdate items\n    set i_main_supp =\n        (select  max(s.supplier_no)\n           from supp_items s\n          where s.item_no      = :supp_items.item_no\n            and s.supplier_no != :a1.supp_no\n            and s.date_update =\n                (select max(s1.date_update)\n                   from supp_items s1\n                  where s1.item_no      = s.item_no\n                    and s1.supplier_no != :a1.supp_no))\nwhere item_no     = :supp_items.item_no\n   and i_main_supp = :a1.supp_no\n   and not exists (select '�'\n                      from supp_items\n                     where item_no      = :supp_items.item_no\n                       and supplier_no = :a1.supp_no);\nexception when no_data_found then null;\nend;\n-- Update the main supplier to null when the last supplier is\n-- beind deleted.\nbegin\nupdate items\n    set i_main_supp = ''\n  where item_no = :supp_items.item_no\n    and not exists (select '�'\n                      from supp_items\n                     where item_no      = :supp_items.item_no  );\nexception when no_data_found then null;\nend;\n"
    },
    {
      "name": "KEY-DOWN",
      "code": "down;"
    },
    {
      "name": "KEY-UP",
      "code": "up;"
    },
    {
      "name": "KEY-SCRDOWN",
      "code": "scroll_down;"
    },
    {
      "name": "KEY-SCRUP",
      "code": "scroll_up;"
    },
    {
      "name": "PRE-QUERY",
      "code": "set_block_property('SUPP_PRODS',default_where,'where si_no is not null and item_no = '''||:SUPP_ITEMS.ITEM_NO||'''');"
    },
    {
      "name": "POST-QUERY",
      "code": "declare \n\tL_S_PRODUCER SUPPLIERS.S_PRODUCER%type;\nbegin\n\tselect s_name ,S_PRODUCER\n\tinto :SUPP_PRODS.S_NAME,L_S_PRODUCER\n\tfrom SUPPLIERS\n\twhere supplier_no = :SUPP_PRODS.SUPPLIER_NO;\n\t\n\tif nvl(l_S_PRODUCER,'N')  = 'Y' then\n\t\tset_item_instance_property('SUPP_PRODS.SUPPLIER_NO',CURRENT_RECORD,VISUAL_ATTRIBUTE,'VA_DISPLAY_ITEM_GREEN');\n\t\tset_item_instance_property('SUPP_PRODS.S_NAME',CURRENT_RECORD,VISUAL_ATTRIBUTE,'VA_DISPLAY_ITEM_GREEN');\n\t\tset_item_instance_property('SUPP_PRODS.SI_NO',CURRENT_RECORD,VISUAL_ATTRIBUTE,'VA_DISPLAY_ITEM_GREEN');\n\telse\n\t\tset_item_instance_property('SUPP_PRODS.SUPPLIER_NO',CURRENT_RECORD,VISUAL_ATTRIBUTE,'VA_DISPLAY_ITEM');\n\t\tset_item_instance_property('SUPP_PRODS.S_NAME',CURRENT_RECORD,VISUAL_ATTRIBUTE,'VA_DISPLAY_ITEM');\n\t\tset_item_instance_property('SUPP_PRODS.SI_NO',CURRENT_RECORD,VISUAL_ATTRIBUTE,'VA_DISPLAY_ITEM');\n\tend if;\n\nexception\n\twhen no_data_found then\n\t\tnull;\nend;\n\n"
    },
    {
      "name": "WHEN-BUTTON-PRESSED",
      "code": "IF :system.block_status != 'QUERY' THEN\n\t:system.message_level := '5';\n\tpost;\n\t:system.message_level := '0';\nEND IF;\ngo_block('SUPP_ITEMS');\nhide_view('PAGE_5');"
    },
    {
      "name": "PRE-UPDATE",
      "code": ":items.date_update := SYSDATE;\n:items.username := :ctrl.username;"
    },
    {
      "name": "KEY-COMMIT",
      "code": ":parameter.param_rec_no := :system.trigger_record;\n--if :system.current_item = 'SUPP_ITEMS.SI_NO'  then\n\t-- add paramter thar handle check from commit Michal 16/02/2025\n:parameter.p_from_commit := 1;\t\n\tvalidate(form_scope);\n:parameter.p_from_commit := NULL;\t\n--end if;\t \nlo_check_double;\ncommit_form;\ngo_block('supp_items');\ngo_record(:parameter.param_rec_no);\n:parameter.param_rec_no := null;\n\n:a1.from_kovetz := NULL; -- 09.03.2022 Galya\n"
    },
    {
      "name": "KEY-DUP-ITEM",
      "code": "PROC_KEY_TEXT;\nDeclare\n   kum_kum  VARCHAR2(5)   := :global.kumaran;\n   kum_k1b  VARCHAR2(30)  := :global.source_blk_name;\n   kum_k1r  VARCHAR2(5)   := :global.source_record_number;\n   kum_k1i  VARCHAR2(61)  := :global.source_item_name;\n   kum_k2b  VARCHAR2(30)  := :global.target_blk_name;\n   kum_k2r  VARCHAR2(5)   := :global.target_record_number;\n   kum_k2i  VARCHAR2(61)  := :global.target_item_name;\n   kum_k1bs VARCHAR2(5)   := :global.source_blk_sequence;\n   kum_k1is VARCHAR2(5)   := :global.source_item_sequence;\n   kum_k2bs VARCHAR2(5)   := :global.target_blk_sequence;\n   kum_k2is VARCHAR2(5)   := :global.target_item_sequence;\n   kum_but  VARCHAR2(1)   := :global.button;\nBEGIN\nif :SYSTEM.TRIGGER_ITEM  = 'A1.ITEM_FROM' or\n  :SYSTEM.TRIGGER_ITEM  = 'A1.ITEM_TO'   or\n  :SYSTEM.TRIGGER_ITEM  = 'SUPP_ITEMS.ITEM_NO'\nthen\n  default_value('0', 'global.item_no') ;\n     kum_kum    :=  :global.kumaran;\n   kum_k1b    :=  :global.source_blk_name;\n   kum_k1r    :=  :global.source_record_number;\n   kum_k1i    :=  :global.source_item_name;\n   kum_k2b    :=  :global.target_blk_name;\n   kum_k2r    :=  :global.target_record_number;\n   kum_k2i    :=  :global.target_item_name;\n   kum_k1bs   :=  :global.source_blk_sequence;\n   kum_k1is   :=  :global.source_item_sequence;\n   kum_k2bs   :=  :global.target_blk_sequence;\n   kum_k2is   :=  :global.target_item_sequence;\n   kum_but    :=  :global.button;\nCALL_FORM ('h_item',HIDE,DO_REPLACE,QUERY_ONLY);\n:global.kumaran \t\t\t\t:= kum_kum;\n:global.source_blk_name     \t:= kum_k1b;\n:global.source_record_number\t:= kum_k1r;\n:global.source_item_name    \t:= kum_k1i;\n:global.target_blk_name     \t:= kum_k2b;\n:global.target_record_number\t:= kum_k2r;\n:global.target_item_name     \t:= kum_k2i;\n:global.source_blk_sequence    \t:= kum_k1bs;\n:global.source_item_sequence    := kum_k1is;\n:global.target_blk_sequence    \t:= kum_k2bs;\n:global.target_item_sequence    := kum_k2is;\n:global.button   \t\t\t:= kum_but;\nWINDOW_TITLE('����� - 2010 - �����');\n  if :global.item_no is not null\n  then\n    copy(:global.item_no, name_in('SYSTEM.TRIGGER_ITEM')) ;\n  end if;\nelse\n errors(1, 'e');\nend if ;\nEND;\n"
    },
    {
      "name": "KEY-CLRREC",
      "code": "clear_record;\n"
    },
    {
      "name": "KEY-DELREC",
      "code": "check_permission('DELETE');\ndelete_record;\n"
    },
    {
      "name": "KEY-DOWN",
      "code": "down;\n"
    },
    {
      "name": "KEY-EXIT",
      "code": "--exit_form;--olga 21.07.09\n------------------------------------------- olga 21.07.09\ndeclare\n\t L_AL_BUT number;\nbegin\n  if :system.form_status != 'QUERY' then\t\n\t \tL_AL_BUT := raise_alert(10231,'AL_CAUTION_3A');\n\t \t\n\t  if L_AL_BUT = ALERT_BUTTON2 then\t  \t\n\t\t \t--commit_form;\n\t\t \tdo_key('commit_form');\n\t\t \texit_form;\n \t\telsif L_AL_BUT = ALERT_BUTTON3 then \n \t\t \texit_form(NO_VALIDATE);\n \t\tend if;\n\telse\n\t \texit_form(NO_VALIDATE);\n  end if;\nend;\n-------------------------------------------------------------"
    },
    {
      "name": "KEY-PRVBLK",
      "code": "go_block('a1');\n"
    },
    {
      "name": "KEY-UP",
      "code": "\nup;\n"
    },
    {
      "name": "KEY-CLRBLK",
      "code": "------------------------------------------- olga 21.07.09\ndeclare\n\t L_AL_BUT number;\nbegin\n\tif :system.form_status != 'QUERY' then\t\n\t \tL_AL_BUT := raise_alert(10231,'AL_CAUTION_3A');\n\t \t\n\t  if L_AL_BUT = ALERT_BUTTON2 then\t  \t\n\t\t \tcommit_form;\t\t \t\n\t\t \t clear_screen_new;\t \n \t\telsif L_AL_BUT = ALERT_BUTTON3 then \n \t\t \tclear_screen_new;\n \t\tend if;\n\telse\n\t \tclear_screen_new;\n  end if;\nend;\n-------------------------------------------------------------\n\n"
    },
    {
      "name": "WHEN-NEW-FORM-INSTANCE",
      "code": "startup_default;\n\ndefault_value ('0',           'global.item_num');\ndefault_value ('0',           'global.supp_num');\n\n :TITLE6I.t1 := '���� ������';\n :TITLE6I.t2 := '����� ����' ;\n--change_width('ITEM_FROM','ITEM_FROM_DESC',to_number(:global.item_length));\n--change_width('ITEM_TO','ITEM_TO_DESC',to_number(:global.item_length));\n--change_width('SUPP_NO','D_NAME',to_number(:global.supp_length));\n--change_width('ITEM_NO','ITEM_DESC',to_number(:global.item_length));\n\n-- 21.05.2019 Galya\n:parameter.param_is_itm_case_sens := nvl(dbf_get_param('is_itm_case_sens'), 'N');\n-- 21.05.2019 Galya\n\n-- Michal 10/02/2020\nbegin\n\tselect wms_groups\n\tinto   :a1.wms_groups\n\tfrom   wms_params;\nexception\n\twhen others then\n\t:a1.wms_groups := NULL;\nend;\nset_item_property('A1.BUT_WMS', displayed, PROPERTY_FALSE);\n\n-- Michal End 10/02/2020\n\nif nvl(DBF_GET_SPECIAL_PARAM_VAL('SCAN_FLAG'),'N') = 'Y' then\n  set_item_property('A1.B_SCAN', displayed, PROPERTY_TRUE);\n  set_item_property('A1.B_SCAN', enabled, PROPERTY_TRUE);\nelse\n\tset_item_property('A1.B_SCAN', displayed, PROPERTY_FALSE);\nend if;\n\nshow_view ('PAGE_2A');\nif :PARAMETER.PARAM_SUPP_NO is not null then\n\t  :a1.supp_no := :PARAMETER.PARAM_SUPP_NO;\nend if;\nif :PARAMETER.PARAM_ITEM_FROM is not null then\n\t   :a1.item_from := :PARAMETER.PARAM_ITEM_FROM;\n\t   :a1.item_to := :PARAMETER.PARAM_ITEM_FROM;\nend if;\nif :PARAMETER.PARAM_SUPP_NO is not null or \n\t:PARAMETER.PARAM_ITEM_FROM is not null then\n\t   do_key ('execute_query');\nend if;\t\n\nIF :parameter.param_num IS NOT NULL THEN\n\t:a1.item_from := :PARAMETER.PARAM_NUM;\n\t:a1.item_to := :PARAMETER.PARAM_NUM;\nEND IF;\n\nDECLARE l_i_eff_price_flag  VARCHAR2(1);\nBEGIN\n  SELECT I_EFF_PRICE_FLAG INTO l_i_eff_price_flag\n  FROM params;\n  \n  IF l_i_eff_price_flag IS NULL THEN\n  \tset_item_property('BUT_EFF_PRICE',displayed,property_false);\n  ELSE\n  \tset_item_property('BUT_EFF_PRICE',displayed,property_true);\n  \tset_item_property('BUT_EFF_PRICE',enabled,property_true);\n  END IF;\nEND;\n--message ('glob = '||:GLOBAL.USER_GRANTS);\nhide_view('PAGE_3');\nset_item_property('PUSH_BONUS',label,'���� �������');\nhide_view('PAGE_4');\nhide_view('PAGE_5');\n\nset_item_property('PUSH_GENERAL',label,'���� ����');\nset_item_property('A1.SUPP_NO',visual_attribute,'VA_ITEM_MANDATORY');\nset_item_property('A1.D_NAME',visual_attribute,'VA_ITEM');\n--:GLOBAL.user_grants :='eLWJONHKEZGDFAKTXBUPSCMIYQ';\n\n-- 09.03.2022 Galya\nset_item_property('A1.FILE_NAME',ENABLED,PROPERTY_FALSE);\nset_item_property('A1.FILE_NAME_LOV',ENABLED,PROPERTY_FALSE);\nset_item_property('A1.BUT_CHECK_FILE',ENABLED,PROPERTY_TRUE);\n:a1.from_kovetz := NULL;\n-- 09.03.2022 Galya\n"
    },
    {
      "name": "KEY-EDIT",
      "code": "EDIT_TEXTITEM;"
    }
  ],
  "program_units": [
    {
      "name": "DISP_TEXT_CODE",
      "type": "Procedure",
      "code": "      -- This procedure calls (in query mode) a form which displays\n      -- text lines according to the value of the field from which the\n      -- procedure is called.\n      --\n      -- before calling the form the procedure checks that the text\n      -- code exists in the TEXT_HEAD table .\n      --\n      -- ================================================================\n      procedure disp_text_code is\n          dummy VARCHAR2(1); \n          P_TEXT_CODE text_head.text_code%type;\n         Cursor CHK_TH is\n            select '1'\n            from TEXT_HEAD\n            where text_code = P_TEXT_CODE;  \n      begin\n         P_TEXT_CODE := name_in('system.cursor_value');\n         Open CHK_TH;\n         Fetch CHK_TH into dummy;\n         if CHK_TH%NOTFOUND then \n            errors(2,'e');\n         end if;\n         Close CHK_TH;\n         copy(P_TEXT_CODE,'global.text_code');\n         copy(field_characteristic(name_in('system.cursor_field'),y_pos),\n               'global.y_pos');\n         call_query('h_notes',no_hide);\n      end;\n"
    },
    {
      "name": "CALL_PRICE",
      "type": "Procedure",
      "code": "PROCEDURE call_price IS\n   L_CURR_FORM\tFORMMODULE;\n   L_PL_ID\tPARAMLIST;\n   L_PL_NAME\tVARCHAR2(12) := 'P_OPENFORM'; \n   L_BUTT       NUMBER;\n\nBEGIN\n\n  L_CURR_FORM := Find_Form('TH_SUPPRI');\n\n  IF (Id_Null(L_CURR_FORM))\n  THEN\n    L_PL_ID := Get_Parameter_List(L_PL_NAME); \n    IF NOT Id_Null(L_PL_ID) \n    THEN \n        Destroy_Parameter_List(L_PL_ID); \n    END IF;\n    L_PL_ID := Create_Parameter_List(L_PL_NAME); \n    IF Id_Null(L_PL_ID) \n    THEN \n        Message('Error creating parameter list '||L_PL_NAME); \n        RAISE Form_Trigger_Failure; \n    END IF; \n   \n    Add_Parameter(L_PL_ID,'PARAM_SUPP_NO',TEXT_PARAMETER,\n                  NAME_IN('A1.SUPP_NO')); \n    Add_Parameter(L_PL_ID,'PARAM_ITEM_FROM',TEXT_PARAMETER,\n                  NAME_IN('ITEM_NO')); \n    IF (GL_MEMORY_OK)\n    THEN\n\tCALL_Form(LOWER('TH_SUPPRI'), \n             NO_HIDE,NO_REPLACE,NO_QUERY_ONLY,L_PL_ID);  \n    ELSE\n        L_BUTT := GL_APP_MESS.SKF_GET_MESS_ALERT('AL_NOTE_1',62,NULL);\n    END IF;\n\n  ELSE\n     GO_FORM(L_CURR_FORM);\n  END IF;\n\nEND;"
    },
    {
      "name": "L_GET_SUPP_INFO",
      "type": "Procedure",
      "code": "Procedure L_GET_SUPP_INFO (IN_SUPP       IN     number, \n                           NAME          IN OUT VARCHAR2, \n                           STATUS        IN OUT VARCHAR2, \n                           ERR_HANDLING  IN     VARCHAR2 ) is\nERR_HAND VARCHAR2(1);\nCursor GET_SUPP  is\n    select s_name ,  nvl(s_status,'�')\n    From SUPPLIERS\n    where supplier_no = IN_SUPP;\n----------------------\nBegin\nIf IN_SUPP is null then\n   NAME  :=  '';\n   STATUS    :=  '';\nElse\n   Open GET_SUPP ;\n   Fetch GET_SUPP into NAME,  STATUS;\n   if (GET_SUPP%NOTFOUND) then\n      ERR_HAND  :=  lower(substr(ERR_HANDLING, 1, 1));\n      errors(239, ERR_HAND);\n   end if;\n   Close GET_SUPP ;\nEnd if;\nEnd;\n"
    },
    {
      "name": "CLEAR_SCREEN",
      "type": "Procedure",
      "code": "PROCEDURE clear_screen IS\nBEGIN\nclear_screen_new;\t\n  clear_record; go_block ('SUPP_ITEMS'); clear_block (NO_VALIDATE);\ngo_block ('A1'); clear_record;\n\nerase('global.item_num');\nerase('global.supp_num');\nhide_view('PAGE_3');\nset_item_property('PUSH_BONUS',label,'���� �������');\nhide_view('PAGE_4');\nset_item_property('PUSH_GENERAL',label,'���� ����');\nset_item_property('A1.SUPP_NO',visual_attribute,'VA_ITEM_MANDATORY');\nset_item_property('A1.D_NAME',visual_attribute,'VA_ITEM');\nset_item_property('PUSH_BONUS',visible,property_true);\nset_item_property('PUSH_BONUS',enabled,property_true);\nset_item_property('PUSH_GENERAL',visible,property_true);\nset_item_property('PUSH_GENERAL',enabled,property_true);\n\n\nEND;"
    },
    {
      "name": "LO_CHECK_DOUBLE",
      "type": "Procedure",
      "code": "PROCEDURE lo_check_double IS\n   l_end   number(2) := 0;\nBEGIN\n  go_block('supp_items');\n  while l_end = 0 loop\n  \tif :change_si_no = 1 then\n  \t\t lo_check_xref;\n  \tend if;\n  \tif :system.last_record = 'TRUE' then\n  \t\tl_end := 1;\n    else\t\t\n  \t  next_record;\n    end if;\n  end loop; \n  first_record;\nEND;"
    },
    {
      "name": "LO_ALERT_MESSAGE",
      "type": "Procedure",
      "code": "PROCEDURE lo_alert_message (IN_ERR    IN NUMBER,\n                            in_arg11  in varchar2  DEFAULT NULL,\n                            in_arg12  in varchar2  DEFAULT NULL,\n                            in_arg13  in varchar2  DEFAULT NULL) IS\nL_AL_BUT number;\nIN_ARG1  varchar2(300);\nBEGIN\n--\tsp_get_error(IN_ERR ,in_arg11,in_arg12,in_arg13,in_arg14,IN_ARG1);\n--\tmessage (IN_ARG1);\n--\tmessage (IN_ARG1);  \n \tLoop  \t  \t\n    L_AL_BUT  := raise_alert(IN_ERR,'AL_NOTE_3o',in_arg11,in_arg12,in_arg13);\n    if L_AL_BUT  = alert_button2  or L_AL_BUT  = alert_button3 then\n      exit;\n    end if;\n  End Loop;\n  if L_AL_BUT = alert_button3 then\n  \tset_application_property(cursor_style,'DEFAULT');\n  \tprevious_item;\n    raise form_trigger_failure;\n  end if;\nEND;"
    },
    {
      "name": "LO_CHECK_FILE",
      "type": "Procedure",
      "code": "/*******************************************\n   Code modified by the Forms Migration Assistant\n   16-���-2025 12:27 PM\n *******************************************/\n\nPROCEDURE lo_check_file IS\n \tv_email dbg_send_template_mail.ar_mails;\n  in_file             CLIENT_TEXT_IO.FILE_TYPE;\n  l_num_rec           number(5) := 0;\n  l_line              varchar2(400);\n  l_value             varchar2(50);\n  l_pos               number(9); \n  l_max_rownum        number(4):= 0;\n  l_pos1              number(4);  --  begin of the field\n  l_pos2              number(4); ---  amount positions in the field\t\n  l_row               varchar2(4); ---\n  l_num_row_file      number := 0;\n  l_err_yn            number ;  \n\n  l_item_no           supp_items.item_no%type;               ---- column A       1      item_no\n  l_supplier          supp_items.supplier_no%type;           ---- column B       2      supplier\n  l_bonus             supp_items.SI_BONUS_CATEGORY%type;     ---- column C       3      bonus\n  l_sub_bonus         supp_items.SI_BONUS_SUB_CATEGORY%type; ---- column D       4      sub_bonus\n\n  l_rownum            NUMBER(5) := 0;         ---- rownum\n \n  l_err               varchar2(80);\n  l_check_num         number(15); \n  l_check_char        varchar2(30);\n  l_max_rownum        number(6);\n  l_count             NUMBER;\n\nbegin  \n\tselect SESSION_ID.nextval into :a1.tmp_pid from dual; \n\n  select SESSION_ID.nextval into :a1.tmp_pid1 from dual; \n\n\tdelete from hashlama_temp2 where tmp_pid = :a1.tmp_pid;\n\tlocal_commit; \n\tdelete from hashlama_temp where tmp_pid = :a1.tmp_pid1;\n\tlocal_commit; \n   \n  in_file := CLIENT_TEXT_IO.FOPEN(:a1.file_name,'r');\n  loop\n  CLIENT_TEXT_IO.GET_LINE (in_file,l_line);\n  l_num_rec := l_num_rec + 1;\n  l_err_yn := 0;\n  if l_line is null then\n  \texit;\n  else\n  \tl_num_row_file := l_num_row_file + 1;  \n  \tif\tl_num_row_file = 1 then\n  \t\t null;\n    else\t\t \n  ----- \tfields in line ----\n  \t  if l_err_yn = 0 then\n  \t\t  select instr(l_line,',',1,1 ) into l_pos from dual;\n        l_value := substr (l_line,1,(l_pos - 1));              ---- item_no  1\n        l_value := ltrim(rtrim(l_value));\n        l_item_no := l_value;\n\n        l_pos1 := l_pos + 1;\n  \t\t  select instr(l_line,',',1,2 ) into l_pos from dual;\n    \t  l_pos2 := l_pos - l_pos1;\n        l_supplier := substr(l_line,l_pos1,l_pos2);            ---- supplier  2\n    \t  l_supplier := to_number(ltrim(rtrim(l_supplier)));\n\n   \t    l_pos1 := l_pos + 1;\n  \t\t  select instr(l_line,',',1,3 ) into l_pos from dual;\n    \t  l_pos2 := l_pos - l_pos1;\n        l_bonus := substr(l_line,l_pos1,l_pos2);               ---- supplier  3\n   \t    l_bonus := ltrim(rtrim(l_bonus));\n\n   \t    l_pos1 := l_pos + 1;\n   \t    l_sub_bonus := substr(l_line,l_pos1);                  ---- sub_bonus 4 \n   \t    l_sub_bonus := ltrim(rtrim(l_sub_bonus));\n   \t  end if;\n  \n    ----------------------------------   checking  fields   -----------------------\n    --------------------   item_no  -------\n      if l_err_yn = 0 then\n        l_err:= null;\n        if l_item_no is null then\n      \t  l_err := '��� ���� ����';  \n      \t  insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'ITEM_NO',l_err,null,:a1.tmp_pid);\n   \t\t  \tl_err_yn := 1; \n   \t\t\t  local_commit;        \n        else\n          begin\n      \t    select count(*) into l_check_num from items where item_no = l_item_no;\n            IF l_check_num = 0 THEN\n              l_err :='���� ���� �� ����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'ITEM_NO',l_err,l_item_no,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n            END IF;\t\n          exception\n            when no_data_found then \n              l_err :='���� ���� �� ����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'ITEM_NO',l_err,l_item_no,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n   \t      end;\t       \n\n          if l_err_yn = 0 then\n\t          begin\n      \t    select count(*) into l_check_num from items where item_no = l_item_no and i_status != '�';\n            IF l_check_num = 0 THEN\n              l_err :='���� �����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'ITEM_NO',l_err,l_item_no,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n            END IF;\t\n          exception\n            when no_data_found then \n              l_err :='���� �����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'ITEM_NO',l_err,l_item_no,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n   \t      end;\t       \n          END IF;\n        END IF;\n      end if;\t \n    --------------------------------------------\n\n    --------------------   supplier  -------\n      if l_err_yn = 0 then\n        l_err:= null;\n        if l_item_no is null then\n      \t  l_err := '��� ���� ���';  \n      \t  insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SUPPLIER_NO',l_err,null,:a1.tmp_pid);\n   \t\t  \tl_err_yn := 1; \n   \t\t\t  local_commit;        \n        else\n          begin\n      \t    select count(*) into l_check_num from suppliers where supplier_no = l_supplier;\n            IF l_check_num = 0 THEN\n              l_err :='���� ��� �� ����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SUPPLIER_NO',l_err,l_supplier,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n            END IF;\t\n          exception\n            when no_data_found then \n              l_err :='���� ��� �� ����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SUPPLIER_NO',l_err,l_supplier,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n   \t      end;\t       \n\n          if l_err_yn = 0 then\n          begin\n      \t    select count(*) into l_check_num from suppliers where supplier_no = l_supplier and s_type != '�';\n            IF l_check_num = 0 THEN\n              l_err :='��� �����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SUPPLIER_NO',l_err,l_supplier,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n            END IF;\t\n          exception\n            when no_data_found then \n              l_err :='��� �����' ;\n       \t      insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SUPPLIER_NO',l_err,l_supplier,:a1.tmp_pid);\n     \t\t\t    l_err_yn := 1;\n     \t\t\t    local_commit;\n   \t      end;\t       \n          END IF;\n        END IF;\n      end if;\t \n    --------------------------------------------\n\n    --------------------   sub_bonus  -------\n      if l_err_yn = 0 then\n        l_err:= null;\n        if l_sub_bonus is null then\n        \t l_err := '���� �� ������� ������';  \n        \t insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SI_BONUS_SUB_CATEGORY',l_err,null,:a1.tmp_pid);\n    \t\t   l_err_yn := 1; \n    \t  \t local_commit;        \n        else\n          begin\n        \t  select count(*) into l_check_num from codes where tab_no = 1553 and code = l_sub_bonus;\n            IF l_check_num = 0 THEN\n            \tl_err :='�� ������� ������ �� �����' ;\n           \t  insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SI_BONUS_SUB_CATEGORY',l_err,l_sub_bonus,:a1.tmp_pid);\n       \t\t\t  l_err_yn := 1;\n   \t    \t\t  local_commit;\n            END IF;\n          exception\n            when no_data_found then \n              l_err :='�� ������� ������ �� �����' ;\n           \t  insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SI_BONUS_SUB_CATEGORY',l_err,l_sub_bonus,:a1.tmp_pid);\n       \t\t\t  l_err_yn := 1;\n   \t    \t\t  local_commit;\n        \tend;\t       \n        end if;\t \n      end if;\n\n    --------------------   bonus  -------\n      if l_err_yn = 0 then\n        l_err:= null;\n        if l_bonus is null then\n        \t l_err := '���� ������� ������';  \n        \t insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SI_BONUS_CATEGORY',l_err,null,:a1.tmp_pid);\n    \t\t   l_err_yn := 1; \n    \t  \t local_commit;        \n        else\n          begin\n        \t  select count(*) into l_check_num from codes where tab_no = 1552 and code = l_bonus;\n            IF l_check_num = 0 THEN\n            \tl_err :='������� ������ �� �����' ;\n           \t  insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SI_BONUS_CATEGORY',l_err,l_bonus,:a1.tmp_pid);\n       \t\t\t  l_err_yn := 1;\n   \t    \t\t  local_commit;\n            END IF;\n          exception\n            when no_data_found then \n              l_err :='������� ������ �� �����' ;\n           \t  insert into hashlama_temp2 (val1,rem1,rem2,rem3,tmp_pid) values (l_num_rec ,'SI_BONUS_CATEGORY',l_err,l_bonus,:a1.tmp_pid);\n       \t\t\t  l_err_yn := 1;\n   \t    \t\t  local_commit;\n        \tend;\t       \n        end if;\t \n      end if;\n\n     -----------------------  insert into hushlama_temp  -------\n      if l_err_yn = 0 then\n        IF nvl(l_rownum,0) = 0 THEN\n        \t l_rownum := 0;\n        END IF;\n        l_rownum := l_rownum + 1;\n        insert into hashlama_temp (val1,rem1,val2,rem2,rem3,val3,tmp_pid) \n    \t         values (l_num_rec,l_item_no,l_supplier,l_bonus,l_sub_bonus,l_rownum,:a1.tmp_pid1);\n  \t    local_commit;     \n      end if;                                    \n    end if;\n  end if;\n  end loop; \nexception\n  when no_data_found then \n  CLIENT_TEXT_IO.FCLOSE(in_file);   \t                \nEND;\n"
    },
    {
      "name": "LO_UPD_QUANTITY",
      "type": "Procedure",
      "code": "PROCEDURE lo_upd_quantity IS\n  l_item_no           supp_items.item_no%type;                 ---- column A       1     item_no\n  l_supplier          supp_items.supplier_no%type;             ---- column B       1     supplier\n  l_bonus             supp_items.SI_BONUS_CATEGORY%type;       ---- column C       3     bonus\n  l_sub_bonus         supp_items.SI_BONUS_SUB_CATEGORY%type;   ---- column C       4     sub_bonus\n  l_count       NUMBER;\n\n  v_row_num     number;\n\n  cursor c_item is \n  SELECT rem1,val2,rem2,rem3\n  FROM HASHLAMA_TEMP\n  WHERE tmp_pid = :a1.tmp_pid1;\n\nBEGIN\n  open c_item;\n  loop\n/*\n   \tfetch c_item\n    INTO :SUPP_ITEMS.ITEM_NO, :SUPP_ITEMS.SUPPLIER_NO, :SUPP_ITEMS.SI_BONUS_CATEGORY;\n*/\n   \tfetch c_item\n    INTO l_item_no, l_supplier, l_bonus, l_sub_bonus;\n    exit when c_item%notfound;\n\n    UPDATE supp_items\n    SET SI_BONUS_CATEGORY = l_bonus,\n        SI_BONUS_SUB_CATEGORY = l_sub_bonus\n    WHERE item_no = l_item_no\n      AND supplier_no = l_supplier;\n\n/*\n    BEGIN\n  \t  SELECT nvl(i_hname_long,i_hname), i_acq_unit, i_main_supp , i_group\n  \t  INTO :SUPP_ITEMS.ITEM_DESC,:si_unit,:supp_items.i_main_supp , :supp_items.i_group\n  \t  FROM items\n  \t  WHERE item_no = :SUPP_ITEMS.ITEM_NO;\n    EXCEPTION\n      WHEN NO_DATA_FOUND THEN\n      NULL;\n    END;\n\n    BEGIN\n      SELECT code_desc\n      INTO :SUPP_ITEMS.BONUS_NAME\n      FROM codes\n      WHERE tab_no = 1552\n        AND code = :SUPP_ITEMS.SI_BONUS_CATEGORY;\n    EXCEPTION\n      WHEN NO_DATA_FOUND THEN\n      NULL;\n    END;   \n\n    go_block('SUPP_ITEMS');\n    create_record;\n*/\n    next_record;\n  end loop;\t\n  close c_item;\n  --first_record;\nEXCEPTION\n  WHEN NO_DATA_FOUND THEN\n  NULL;\nEND;\n"
    }
  ],
  "sql_clauses": [
    {
      "block": "HASHLAMA_TEMP2",
      "where_clause": "where tmp_pid = :a1.tmp_pid",
      "order_by": "order by val1"
    },
    {
      "block": "SUPP_PRODS",
      "where_clause": null,
      "order_by": "supplier_no"
    },
    {
      "block": "ITEMS",
      "where_clause": "item_no = :supp_items.item_no",
      "order_by": null
    }
  ],
  "summary": {
    "total_triggers": 75,
    "total_program_units": 8,
    "total_sql_clauses": 3
  }
}