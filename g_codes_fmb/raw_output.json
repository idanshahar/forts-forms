{
  "html": "<!DOCTYPE html>\n<html lang=\"he\" dir=\"rtl\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>G_CODES</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body class=\"dashboard-body\">\n    <div class=\"dashboard-container\">\n        <!-- HEADER Block -->\n        <section class=\"dashboard-header-block\">\n            <h2 class=\"dashboard-block-title\">\u05e0\u05d9\u05d4\u05d5\u05dc \u05e7\u05d5\u05d3\u05d9\u05dd</h2>\n            \n            <div class=\"dashboard-form-group\">\n                <label for=\"tab_no\">\u05d8\u05d1\u05dc\u05d4 \u05de\u05e1\u05e4\u05e8</label>\n                <div class=\"dashboard-input-group\">\n                    <input type=\"text\" id=\"tab_no\" name=\"tab_no\" \n                           class=\"dashboard-input\"\n                           maxlength=\"4\" required>\n                    <button class=\"dashboard-btn dashboard-btn-secondary\" id=\"tab_no_lov\">...</button>\n                </div>\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label for=\"tab_desc\">\u05ea\u05d9\u05d0\u05d5\u05e8 \u05d8\u05d1\u05dc\u05d4</label>\n                <input type=\"text\" id=\"tab_desc\" name=\"tab_desc\"\n                       class=\"dashboard-input dashboard-readonly\" \n                       maxlength=\"80\" readonly>\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label for=\"code\">\u05e7\u05d5\u05d3</label>\n                <div class=\"dashboard-input-group\">\n                    <input type=\"text\" id=\"code\" name=\"code\"\n                           class=\"dashboard-input\"\n                           maxlength=\"10\">\n                    <button class=\"dashboard-btn dashboard-btn-secondary\" id=\"code_lov\">...</button>\n                </div>\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label for=\"c_desc\">\u05ea\u05d9\u05d0\u05d5\u05e8</label>\n                <div class=\"dashboard-input-group\">\n                    <input type=\"text\" id=\"c_desc\" name=\"c_desc\"\n                           class=\"dashboard-input\"\n                           maxlength=\"70\">\n                    <button class=\"dashboard-btn dashboard-btn-secondary\" id=\"c_desc_lov\">...</button>\n                </div>\n            </div>\n        </section>\n\n        <!-- CODES Block -->\n        <section class=\"dashboard-data-block\">\n            <div class=\"dashboard-form-group\">\n                <label for=\"code_sort\">\u05de\u05e1\u05e4\u05e8 \u05de\u05d9\u05d5\u05df</label>\n                <input type=\"number\" id=\"code_sort\" name=\"code_sort\"\n                       class=\"dashboard-input\"\n                       maxlength=\"6\">\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label for=\"code_sort2\">\u05de\u05e1\u05e4\u05e8 \u05de\u05d9\u05d5\u05df 2</label>\n                <input type=\"number\" id=\"code_sort2\" name=\"code_sort2\"\n                       class=\"dashboard-input\"\n                       maxlength=\"6\">\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label for=\"code_sort3\">\u05de\u05e1\u05e4\u05e8 \u05de\u05d9\u05d5\u05df \u05d0\u05dc\u05d8\u05e8\u05e0\u05d8\u05d9\u05d1\u05d9</label>\n                <input type=\"number\" id=\"code_sort3\" name=\"code_sort3\"\n                       class=\"dashboard-input\"\n                       maxlength=\"6\">\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label for=\"code_desc_e\">\u05ea\u05d9\u05d0\u05d5\u05e8 \u05d1\u05d0\u05e0\u05d2\u05dc\u05d9\u05ea</label>\n                <input type=\"text\" id=\"code_desc_e\" name=\"code_desc_e\"\n                       class=\"dashboard-input\"\n                       maxlength=\"70\">\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label class=\"dashboard-checkbox-label\">\n                    <input type=\"checkbox\" id=\"hard_code_yn\" name=\"hard_code_yn\"\n                           class=\"dashboard-checkbox\">\n                    \u05e7\u05d5\u05d3 \u05e7\u05e9\u05d9\u05d7\n                </label>\n            </div>\n\n            <div class=\"dashboard-form-group\">\n                <label class=\"dashboard-checkbox-label\">\n                    <input type=\"checkbox\" id=\"code_inactive\" name=\"code_inactive\"\n                           class=\"dashboard-checkbox\">\n                    \u05dc\u05d0 \u05e4\u05e2\u05d9\u05dc\n                </label>\n            </div>\n        </section>\n\n        <div class=\"dashboard-button-group\">\n            <button class=\"dashboard-btn dashboard-btn-primary\" id=\"but_query\">\u05d7\u05d9\u05e4\u05d5\u05e9</button>\n            <button class=\"dashboard-btn dashboard-btn-secondary\" id=\"print\">\u05d4\u05d3\u05e4\u05e1\u05d4</button>\n        </div>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const form = document.querySelector('form');\n            const tabNo = document.getElementById('tab_no');\n            \n            tabNo.addEventListener('change', async function() {\n                if (this.value) {\n                    try {\n                        // Simulate database lookup\n                        const tabDesc = document.getElementById('tab_desc');\n                        tabDesc.value = await getTabDescription(this.value);\n                    } catch(err) {\n                        alert('\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05d8\u05e2\u05d9\u05e0\u05ea \u05ea\u05d9\u05d0\u05d5\u05e8 \u05d4\u05d8\u05d1\u05dc\u05d4');\n                    }\n                }\n            });\n        });\n    </script>\n</body>\n</html><!-- Ownership Block -->\n<section class=\"dashboard-data-block\">\n    <div class=\"dashboard-form-group\">\n        <label for=\"owner_dept\">\u05de\u05d7\u05dc\u05e7\u05d4 \u05d0\u05d7\u05e8\u05d0\u05d9\u05ea</label>\n        <input type=\"text\" id=\"owner_dept\" name=\"owner_dept\" \n               class=\"dashboard-input\" maxlength=\"3\">\n        <button class=\"dashboard-btn dashboard-btn-secondary\" id=\"owner_dept_lov\">...</button>\n    </div>\n\n    <div class=\"dashboard-form-group\">\n        <label for=\"owner_dept_desc\">\u05ea\u05d9\u05d0\u05d5\u05e8 \u05de\u05d7\u05dc\u05e7\u05d4</label>\n        <input type=\"text\" id=\"owner_dept_desc\" name=\"owner_dept_desc\"\n               class=\"dashboard-input\" readonly maxlength=\"40\">\n    </div>\n</section>\n\n<!-- Audit Fields Block -->\n<section class=\"dashboard-data-block\">\n    <div class=\"dashboard-form-group\">\n        <label for=\"created_by\">\u05e0\u05d5\u05e6\u05e8 \u05e2\"\u05d9</label>\n        <input type=\"text\" id=\"created_by\" name=\"created_by\"\n               class=\"dashboard-input\" readonly maxlength=\"30\">\n    </div>\n\n    <div class=\"dashboard-form-group\">\n        <label for=\"created_date\">\u05ea\u05d0\u05e8\u05d9\u05da \u05d9\u05e6\u05d9\u05e8\u05d4</label>\n        <input type=\"text\" id=\"created_date\" name=\"created_date\"\n               class=\"dashboard-input\" readonly>\n    </div>\n\n    <div class=\"dashboard-form-group\">\n        <label for=\"last_updated_by\">\u05e2\u05d5\u05d3\u05db\u05df \u05e2\"\u05d9</label>\n        <input type=\"text\" id=\"last_updated_by\" name=\"last_updated_by\"\n               class=\"dashboard-input\" readonly maxlength=\"30\">\n    </div>\n\n    <div class=\"dashboard-form-group\">\n        <label for=\"last_update_date\">\u05ea\u05d0\u05e8\u05d9\u05da \u05e2\u05d3\u05db\u05d5\u05df</label>\n        <input type=\"text\" id=\"last_update_date\" name=\"last_update_date\"\n               class=\"dashboard-input\" readonly>\n    </div>\n\n    <div class=\"dashboard-form-group\">\n        <label for=\"remark\">\u05d4\u05e2\u05e8\u05d5\u05ea</label>\n        <textarea id=\"remark\" name=\"remark\" \n                  class=\"dashboard-textarea\"\n                  maxlength=\"2000\" rows=\"3\"></textarea>\n    </div>\n</section>",
  "css": ":root {\n  --primary: #e91e63;\n  --primary-light: #f27595;\n  --primary-dark: #b31849;\n  --primary-hover: #d31557;\n  --secondary: #7b809a;\n  --secondary-light: #99a1b7;\n  --secondary-dark: #646981;\n  --accent: #344767;\n  --error: #dc3545;\n  --warning: #ffc107;\n  --success: #198754;\n  --info: #17c1e8;\n  --background: #f0f2f5;\n  --surface: #ffffff;\n  --surface-hover: #f8f9fa;\n  --text-primary: rgba(52, 71, 103, 0.87);\n  --text-secondary: rgba(52, 71, 103, 0.6);\n  --text-disabled: rgba(52, 71, 103, 0.38);\n  --border-default: #dee2e6;\n  --border-focus: #e91e63;\n}\n\n.dashboard-body {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: var(--text-primary);\n  background-color: var(--background);\n}\n\n.dashboard-container {\n  max-width: 1320px;\n  margin: 0 auto;\n  padding: 1.5rem;\n}\n\n.dashboard-form-group {\n  margin-bottom: 1rem;\n}\n\n.dashboard-input {\n  width: 100%;\n  padding: 0.5rem 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  color: var(--text-primary);\n  background-color: var(--surface);\n  border: 1px solid var(--border-default);\n  border-radius: 0.375rem;\n  transition: border-color 0.25s ease-in-out;\n}\n\n.dashboard-input:focus {\n  border-color: var(--border-focus);\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(233, 30, 99, 0.25);\n}\n\n.dashboard-input.error {\n  border-color: var(--error);\n}\n\n.dashboard-btn {\n  display: inline-block;\n  padding: 0.625rem 1.5rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 0.5rem;\n  transition: all 0.25s ease;\n  cursor: pointer;\n}\n\n.dashboard-btn-primary {\n  color: #ffffff;\n  background-color: var(--primary);\n  border: 1px solid var(--primary);\n}\n\n.dashboard-btn-primary:hover {\n  background-color: var(--primary-hover);\n  border-color: var(--primary-hover);\n}\n\n.dashboard-btn-secondary {\n  color: #ffffff;\n  background-color: var(--secondary);\n  border: 1px solid var(--secondary);\n}\n\n.dashboard-btn-secondary:hover {\n  background-color: var(--secondary-dark);\n  border-color: var(--secondary-dark);\n}\n\n.dashboard-table {\n  width: 100%;\n  margin-bottom: 1rem;\n  background-color: var(--surface);\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.07);\n}\n\n.dashboard-table th,\n.dashboard-table td {\n  padding: 0.75rem;\n  border-bottom: 1px solid var(--border-default);\n}\n\n.dashboard-table th {\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.dashboard-header-block {\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  background-color: var(--surface);\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.07);\n}\n\n.dashboard-data-block {\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  background-color: var(--surface);\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.07);\n}\n\n.dashboard-checkbox {\n  margin-right: 0.5rem;\n}\n\n.dashboard-footer {\n  padding: 1.5rem;\n  margin-top: 3rem;\n  background-color: var(--surface);\n  border-top: 1px solid var(--border-default);\n}\n\n/* RTL Support */\n[dir=\"rtl\"] .dashboard-container {\n  text-align: right;\n}\n\n[dir=\"rtl\"] .dashboard-checkbox {\n  margin-right: 0;\n  margin-left: 0.5rem;\n}\n\n/* Dark Theme */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --background: #1a1f33;\n    --surface: #273045;\n    --surface-hover: #2c3752;\n    --text-primary: rgba(255, 255, 255, 0.87);\n    --text-secondary: rgba(255, 255, 255, 0.6);\n    --text-disabled: rgba(255, 255, 255, 0.38);\n    --border-default: #344767;\n  }\n}\n\n/* Responsive Grid */\n.dashboard-grid {\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 1.5rem;\n}\n\n@media (max-width: 768px) {\n  .dashboard-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Form Validation States */\n.dashboard-input.valid {\n  border-color: var(--success);\n}\n\n.dashboard-input.invalid {\n  border-color: var(--error);\n}\n\n.dashboard-error-message {\n  color: var(--error);\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.dashboard-success-message {\n  color: var(--success);\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n/* Accessibility Focus Styles */\n.dashboard-btn:focus,\n.dashboard-input:focus,\n.dashboard-checkbox:focus {\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\n[data-theme=\"contrast\"] {\n  --primary: #ff1744;\n  --secondary: #90a4ae;\n  --text-primary: #ffffff;\n  --background: #000000;\n  --surface: #121212;\n}",
  "javascript": "// Forms Controller Class\nclass FormsController {\n  constructor() {\n    this.fields = new Map();\n    this.currentField = null;\n    this.queryMode = false;\n    this.lovWindows = new Map();\n    this.dirtyFields = new Set();\n    \n    this.initializeKeyHandlers();\n    this.initializeFields();\n  }\n\n  initializeKeyHandlers() {\n    document.addEventListener('keydown', (e) => {\n      switch(e.key) {\n        case 'Tab':\n          e.preventDefault();\n          this.navigateNext();\n          break;\n        case 'Enter':\n          e.preventDefault(); \n          this.navigateNext();\n          break;\n        case 'F7':\n          e.preventDefault();\n          this.enterQuery();\n          break;\n        case 'F8':\n          e.preventDefault();\n          this.executeQuery();\n          break;\n        case 'F10':\n          e.preventDefault();\n          this.save();\n          break;\n      }\n    });\n  }\n\n  initializeFields() {\n    document.querySelectorAll('input, select, textarea').forEach(el => {\n      const field = new FormField(el);\n      this.fields.set(el.id, field);\n      \n      el.addEventListener('focus', () => {\n        this.currentField = field;\n      });\n      \n      el.addEventListener('change', () => {\n        this.dirtyFields.add(field);\n        this.validateField(field);\n      });\n    });\n  }\n\n  validateField(field) {\n    if(field.required && !field.value) {\n      this.showError(`${field.label} is required`);\n      return false;\n    }\n    return field.validate();\n  }\n\n  validateForm() {\n    let isValid = true;\n    this.fields.forEach(field => {\n      if(!this.validateField(field)) {\n        isValid = false;\n      }\n    });\n    return isValid;\n  }\n\n  navigateNext() {\n    const fields = Array.from(this.fields.values());\n    const currentIndex = fields.indexOf(this.currentField);\n    const nextField = fields[currentIndex + 1] || fields[0];\n    nextField.element.focus();\n  }\n\n  enterQuery() {\n    this.queryMode = true;\n    this.clearAllFields();\n    document.body.classList.add('query-mode');\n  }\n\n  executeQuery() {\n    if(!this.queryMode) return;\n    \n    const queryParams = {};\n    this.fields.forEach((field, key) => {\n      if(field.value) {\n        queryParams[key] = field.value;\n      }\n    });\n\n    this.fetchRecords(queryParams)\n      .then(records => this.displayRecords(records))\n      .catch(err => this.showError(err));\n      \n    this.queryMode = false;\n    document.body.classList.remove('query-mode');\n  }\n\n  async fetchRecords(params) {\n    const response = await fetch('/api/records', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n    \n    if(!response.ok) {\n      throw new Error('Query failed');\n    }\n    \n    return response.json();\n  }\n\n  displayRecords(records) {\n    if(records.length === 0) {\n      this.showMessage('No records found');\n      return;\n    }\n    \n    // Display first record\n    const record = records[0];\n    this.fields.forEach((field, key) => {\n      field.value = record[key] || '';\n    });\n  }\n\n  async save() {\n    if(!this.validateForm()) return;\n    \n    if(this.dirtyFields.size === 0) {\n      this.showMessage('No changes to save');\n      return;\n    }\n\n    const data = {};\n    this.dirtyFields.forEach(field => {\n      data[field.name] = field.value;\n    });\n\n    try {\n      const response = await fetch('/api/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      if(!response.ok) throw new Error('Save failed');\n      \n      this.showMessage('Record saved successfully');\n      this.dirtyFields.clear();\n    } catch(err) {\n      this.showError(err);\n    }\n  }\n\n  showLov(field) {\n    if(this.lovWindows.has(field.name)) {\n      return;\n    }\n\n    const lovWindow = new LovWindow(field);\n    this.lovWindows.set(field.name, lovWindow);\n    \n    lovWindow.onSelect = (value) => {\n      field.value = value;\n      this.lovWindows.delete(field.name);\n      field.element.focus();\n    };\n  }\n\n  clearAllFields() {\n    this.fields.forEach(field => field.clear());\n    this.dirtyFields.clear();\n  }\n\n  showError(message) {\n    const errorDiv = document.getElementById('error-message');\n    errorDiv.textContent = message;\n    errorDiv.style.display = 'block';\n    setTimeout(() => {\n      errorDiv.style.display = 'none';\n    }, 3000);\n  }\n\n  showMessage(message) {\n    const messageDiv = document.getElementById('info-message');\n    messageDiv.textContent = message;\n    messageDiv.style.display = 'block';\n    setTimeout(() => {\n      messageDiv.style.display = 'none';\n    }, 3000);\n  }\n}\n\nclass FormField {\n  constructor(element) {\n    this.element = element;\n    this.name = element.id;\n    this.label = element.getAttribute('data-label') || this.name;\n    this.required = element.hasAttribute('required');\n    this.validators = [];\n    \n    if(element.getAttribute('data-lov')) {\n      this.initializeLov();\n    }\n  }\n\n  get value() {\n    return this.element.value;\n  }\n\n  set value(val) {\n    this.element.value = val;\n  }\n\n  clear() {\n    this.value = '';\n  }\n\n  validate() {\n    return this.validators.every(validator => validator(this.value));\n  }\n\n  initializeLov() {\n    const lovButton = document.createElement('button');\n    lovButton.className = 'lov-button';\n    lovButton.innerHTML = '...';\n    this.element.parentNode.insertBefore(lovButton, this.element.nextSibling);\n    \n    lovButton.addEventListener('click', () => {\n      formsController.showLov(this);\n    });\n  }\n}\n\nclass LovWindow {\n  constructor(field) {\n    this.field = field;\n    this.window = null;\n    this.onSelect = null;\n    this.create();\n  }\n\n  create() {\n    this.window = document.createElement('div');\n    this.window.className = 'lov-window';\n    \n    const header = document.createElement('div');\n    header.className = 'lov-header';\n    header.innerHTML = `List of Values - ${this.field.label}`;\n    \n    const closeBtn = document.createElement('button');\n    closeBtn.innerHTML = 'X';\n    closeBtn.onclick = () => this.close();\n    header.appendChild(closeBtn);\n    \n    const content = document.createElement('div');\n    content.className = 'lov-content';\n    \n    this.window.appendChild(header);\n    this.window.appendChild(content);\n    document.body.appendChild(this.window);\n    \n    this.loadData();\n  }\n\n  async loadData() {\n    try {\n      const response = await fetch(`/api/lov/${this.field.name}`);\n      const data = await response.json();\n      this.displayData(data);\n    } catch(err) {\n      console.error('Failed to load LOV data:', err);\n    }\n  }\n\n  displayData(data) {\n    const content = this.window.querySelector('.lov-content');\n    const table = document.createElement('table');\n    \n    data.forEach(row => {\n      const tr = document.createElement('tr');\n      tr.onclick = () => {\n        if(this.onSelect) {\n          this.onSelect(row.value);\n        }\n        this.close();\n      };\n      \n      Object.values(row).forEach(value => {\n        const td = document.createElement('td');\n        td.textContent = value;\n        tr.appendChild(td);\n      });\n      \n      table.appendChild(tr);\n    });\n    \n    content.appendChild(table);\n  }\n\n  close() {\n    document.body.removeChild(this.window);\n  }\n}\n\n// Initialize controller when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  window.formsController = new FormsController();\n});",
  "metadata": {
    "fields_expected": 22,
    "fields_generated": 23,
    "coverage": "100.0%",
    "continuation_used": true
  }
}